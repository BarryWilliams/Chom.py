# Converts a helm chart values file into a KOTS Config screen file
# Top-level keys become group headers
#

Make a config options (helm.key, name, help_text, type, default, when key is true, write into values file)
  print in kots config file: |
    - name: <name - should be helm key converted to snake_case>
      title: <Helm key name>
      help_text: <help_text>
      type: <Type from YAML: bool, string, number> #if key is a map, then a heading is used
      default: <default from YAML> #removed if no default
      when: '{{repl (ConfigOptionEquals "<when key>" "external")}}' #only add if when key is not empty

  if "write into values file" != false
    print in values section: |
      <helm key>: {{ repl ConfigOption "<name>" }}

make a group (name, title, description)
  spec:
  groups:
  - name: authentication
    title: Authentication
    description: Configure application authentication below.
    items: <add items>

Build options (key, parent_snake_case_name)
  Get type #map, array, number, string, boolean
  If type=map
    if value=empty map
      print: "error: <key_name> - unable to convert empty maps"
      return
    iterate through each subkey, non-map items first
      For each sub-key
        build options (
          name: sub-key to snake_case
          help_text: "Override defaults for <sub_key_name> - <comment>"
          type: bool
          default: false
          when: <when_snake_case_name> = true
          write into values file: false
          )
      return
  If type=array
    print "error: <key> - Converting Array to Repeatable is not supported yet"
    return
  default=value from key converted to a string
  helper_text = comment above key
  Make a config option (key, snake_case_name, help_text, type, default, parent_snake_case_name, true)

Main
  parse YAML
  make a group (top_options, "Top Options", "Top-level options")
  For each top level non-map item
    Build options (key, "top_options" )
  For each top level map item
    Build options from a map (key, "" )
